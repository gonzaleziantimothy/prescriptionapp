{"ast":null,"code":"\"use strict\";\n/* tslint:disable:max-line-length */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\"); // KNOWN ISSUE\n// -----------\n// Can not handle redirect-url, such as when access 'http://something.com/avatar.png'\n// will redirect to 'http://something.com/65fc2ffcc8aea7ba65a1d1feda173540'\n\n\nvar TIMEOUT = 30000;\n\nfunction getBlobFromURL(url, options) {\n  // cache bypass so we dont have CORS issues with cached images\n  // ref: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n  if (options.cacheBust) {\n    url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime(); // tslint:disable-line\n  }\n\n  var failed = function failed(reason) {\n    var placeholder = '';\n\n    if (options.imagePlaceholder) {\n      var split = options.imagePlaceholder.split(/,/);\n\n      if (split && split[1]) {\n        placeholder = split[1];\n      }\n    }\n\n    var msg = \"Failed to fetch resource: \" + url;\n\n    if (reason) {\n      msg = typeof reason === 'string' ? reason : reason.message;\n    }\n\n    if (msg) {\n      console.error(msg);\n    }\n\n    return placeholder;\n  };\n\n  var deferred = window.fetch // fetch\n  ? window.fetch(url).then(function (response) {\n    return response.blob();\n  }).then(function (blob) {\n    return new Promise(function (resolve, reject) {\n      var reader = new FileReader();\n\n      reader.onloadend = function () {\n        return resolve(reader.result);\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(blob);\n    });\n  }).then(utils_1.getDataURLContent).catch(function () {\n    return new Promise(function (resolve, reject) {\n      reject();\n    });\n  }) // xhr\n  : new Promise(function (resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    var timeout = function timeout() {\n      reject(new Error(\"Timeout of \" + TIMEOUT + \"ms occured while fetching resource: \" + url));\n    };\n\n    var done = function done() {\n      if (req.readyState !== 4) {\n        return;\n      }\n\n      if (req.status !== 200) {\n        reject(new Error(\"Failed to fetch resource: \" + url + \", status: \" + req.status));\n        return;\n      }\n\n      var encoder = new FileReader();\n\n      encoder.onloadend = function () {\n        resolve(utils_1.getDataURLContent(encoder.result));\n      };\n\n      encoder.readAsDataURL(req.response);\n    };\n\n    req.onreadystatechange = done;\n    req.ontimeout = timeout;\n    req.responseType = 'blob';\n    req.timeout = TIMEOUT;\n    req.open('GET', url, true);\n    req.send();\n  });\n  return deferred.catch(failed);\n}\n\nexports.default = getBlobFromURL;","map":null,"metadata":{},"sourceType":"script"}