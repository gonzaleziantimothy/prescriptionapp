{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nvar clonePseudoElements_1 = __importDefault(require(\"./clonePseudoElements\"));\n\nfunction cloneSingleNode(nativeNode) {\n  if (nativeNode instanceof HTMLCanvasElement) {\n    return utils_1.createImage(nativeNode.toDataURL());\n  }\n\n  if (nativeNode.tagName && nativeNode.tagName.toLowerCase() === 'svg') {\n    return Promise.resolve(nativeNode).then(function (svg) {\n      return utils_1.svgToDataURL(svg);\n    }).then(utils_1.createImage);\n  }\n\n  return Promise.resolve(nativeNode.cloneNode(false));\n}\n\nfunction cloneChildren(nativeNode, clonedNode, filter) {\n  var children = utils_1.toArray(nativeNode.childNodes);\n\n  if (children.length === 0) {\n    return Promise.resolve(clonedNode);\n  } // clone children in order\n\n\n  return children.reduce(function (done, child) {\n    return done.then(function () {\n      return cloneNode(child, filter);\n    }).then(function (clonedChild) {\n      if (clonedChild) {\n        clonedNode.appendChild(clonedChild);\n      }\n    });\n  }, Promise.resolve()).then(function () {\n    return clonedNode;\n  });\n}\n\nfunction cloneCssStyle(nativeNode, clonedNode) {\n  var source = window.getComputedStyle(nativeNode);\n  var target = clonedNode.style;\n\n  if (source.cssText) {\n    target.cssText = source.cssText;\n  } else {\n    utils_1.toArray(source).forEach(function (name) {\n      target.setProperty(name, source.getPropertyValue(name), source.getPropertyPriority(name));\n    });\n  }\n}\n\nfunction cloneInputValue(nativeNode, clonedNode) {\n  if (nativeNode instanceof HTMLTextAreaElement) {\n    clonedNode.innerHTML = nativeNode.value;\n  }\n\n  if (nativeNode instanceof HTMLInputElement) {\n    clonedNode.setAttribute('value', nativeNode.value);\n  }\n}\n\nfunction decorate(nativeNode, clonedNode) {\n  if (!(clonedNode instanceof Element)) {\n    return clonedNode;\n  }\n\n  return Promise.resolve().then(function () {\n    return cloneCssStyle(nativeNode, clonedNode);\n  }).then(function () {\n    return clonePseudoElements_1.default(nativeNode, clonedNode);\n  }).then(function () {\n    return cloneInputValue(nativeNode, clonedNode);\n  }).then(function () {\n    return clonedNode;\n  });\n}\n\nfunction cloneNode(domNode, filter, isRoot) {\n  if (!isRoot && filter && !filter(domNode)) {\n    return Promise.resolve(null);\n  }\n\n  return Promise.resolve(domNode).then(cloneSingleNode).then(function (clonedNode) {\n    return cloneChildren(domNode, clonedNode, filter);\n  }).then(function (clonedNode) {\n    return decorate(domNode, clonedNode);\n  });\n}\n\nexports.default = cloneNode;","map":null,"metadata":{},"sourceType":"script"}